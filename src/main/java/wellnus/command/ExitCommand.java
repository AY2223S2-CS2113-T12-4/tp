package wellnus.command;

import java.util.HashMap;

import wellnus.exception.BadCommandException;
import wellnus.ui.TextUi;

/**
 * Provides the exit command of the WellNUS++ app.
 */
public class ExitCommand extends Command {
    private static final String COMMAND_ARGUMENTS = "";
    private static final String COMMAND_DETAILED_DESCRIPTION = "Exits from the WellNUS++ application";
    private static final String COMMAND_INVALID_COMMAND_MESSAGE = "Invalid exit command given!";
    private static final String COMMAND_KEYWORD = "exit";
    private static final String FEATURE_KEYWORD = "";
    private final TextUi textUi;

    /**
     * Initialises an ExitCommand Object using the arguments issued by the user.
     * @param arguments Command arguments issued by the user
     * @throws BadCommandException If arguments given are invalid
     * @see ExitCommand#validateCommand(HashMap)
     */
    public ExitCommand(HashMap<String, String> arguments) throws BadCommandException {
        super(arguments);
        this.textUi = new TextUi();
    }

    public static boolean isExit(Command command) {
        return command instanceof ExitCommand;
    }

    private TextUi getTextUi() {
        return this.textUi;
    }

    /**
     * Identifies this Command's keyword. Override this in subclasses so
     * toString() returns the correct String representation.
     *
     * @return String Keyword of this Command
     */
    @Override
    protected String getCommandKeyword() {
        return ExitCommand.COMMAND_KEYWORD;
    }

    /**
     * Returns a detailed user-friendly description of what this specific command does.
     *
     * @return String Detailed explanation of this command
     */
    @Override
    protected String getDetailedDescription() {
        return ExitCommand.COMMAND_DETAILED_DESCRIPTION;
    }

    /**
     * Identifies the feature that this Command is associated with. Override
     * this in subclasses so toString() returns the correct String representation.
     *
     * @return String Keyword for the feature associated with this Command
     */
    @Override
    protected String getFeatureKeyword() {
        return ExitCommand.FEATURE_KEYWORD;
    }

    /**
     * Returns all the supported arguments for this Command.
     *
     * @return String All supported arguments for this Command
     */
    @Override
    protected String getSupportedCommandArguments() {
        return ExitCommand.COMMAND_ARGUMENTS;
    }

    /**
     * Exits the WellNUS++ application.
     */
    @Override
    public void execute() {
    }

    /**
     * Validate the arguments passed by the user
     *
     * @param arguments Argument-Payload map generated by CommandParser using the user's command
     * @throws BadCommandException If the commandMap has any issues
     */
    @Override
    public void validateCommand(HashMap<String, String> arguments) throws BadCommandException {
        if (!arguments.containsKey(ExitCommand.COMMAND_KEYWORD)) {
            throw new BadCommandException(ExitCommand.COMMAND_INVALID_COMMAND_MESSAGE);
        }
    }
}
